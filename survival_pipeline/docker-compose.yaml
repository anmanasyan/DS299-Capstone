# Docker Compose file for setting up PostgreSQL database, pgAdmin, model and API

services:

  # PostgreSQL Database
  db:
    container_name: postgresql_db
    image: postgres
    restart: always
    ports:
      - 5432:5432  # Expose PostgreSQL port
    environment:
      - POSTGRES_USER=${DB_USER}  # Set PostgreSQL username
      - POSTGRES_PASSWORD=${DB_PASSWORD}  # Set PostgreSQL password
      - POSTGRES_DB=${DB_NAME}  # Set PostgreSQL database name
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]  # Healthcheck for PostgreSQL
      interval: 60s
      timeout: 10s
      retries: 5
    volumes:
      - ./postgres_data/pgdata:/var/lib/postgresql/data  # Persist PostgreSQL data

  # pgAdmin for PostgreSQL management
  pgadmin:  
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}  # Set pgAdmin default email
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}  # Set pgAdmin default password
    ports:
      - 5050:80  # Expose pgAdmin port for local browser
    depends_on: 
      - db  # pgAdmin depends on PostgreSQL
    volumes:
      - ./pgadmin_data/pgadmin:/var/lib/pgadmin  # Persist pgAdmin data

  # Database setup
  db_setup:
    container_name: db_setup
    build: ./db_setup
    ports:
      - 3000:3000
    depends_on: 
      db:
        condition: service_healthy  # Wait for PostgreSQL to be healthy before setting up
    healthcheck:
      test: "exit 0"

  # Model container
  model:
    container_name: model
    build: ./model
    ports:
      - 8888:8888
    volumes:
        - ./model:/model  # Mount the model directory
    depends_on: 
      db:
          condition: service_healthy 
      db_setup: 
        condition: service_completed_successfully

  # API container
  app:
    container_name: app
    build: ./app
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"  # Start the application
    volumes:
      - ./app:/app  # Mount the application directory
    ports:
      - 8000:8000  # Expose application port
    depends_on:
      - db  # Application depends on PostgreSQL
    restart: always  # Restart the application container always